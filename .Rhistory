library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
package_version(R.version)
R.version
install.packages("installer")
install.packages("installr")
library(installr)
check.for.updates.R()
install.R()
library(ggplot2)
library(plyr)
library(dplyr)
### Data Preprocessing Function (summary data)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
### Previous Experience for On/Offline Meeting
# Data Preprocessing
previousExperience <- read.csv(file = "./rawData/questionnaire/previousExperience.csv", header=T, fileEncoding="UTF-8-BOM")
previousExperience$kind <- as.factor(previousExperience$kind)
pe_summary <- data_summary(previousExperience, varname="value", groupnames=c("meeting", "kind"))
# Convert dose to a factor variable
pe_summary2$kind=as.factor(pe_summary$kind)
head(pe_summary)
library(ggplot2)
#install.package("")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
library(plyr)
library(dplyr)
### Set File Path for Mac Environment
setwd("/Users/Soohwan/Desktop/DataVisualization-ZoomProj")
### Read Raw Data
data <- read.csv(file = "./data/questionnaire/rawData/rawData.csv", header=T, fileEncoding="UTF-8-BOM")
### Age of Participants
meanAge = mean(data$age)
variationAge = var(data$age)
stdAge = sd(data$age)
### Normality Test
# Previous Experience
shapiro.test(data$offlineExperience)
shapiro.test(data$offlineAggressivity)
shapiro.test(data$onlineExperience)
shapiro.test(data$onlineAggressivity)
# Online Experience - Participation Change
shapiro.test(data$onlineMeetingParticipationChange)
shapiro.test(data$onlineClassParticipationChange)
# Online Experience - Overal Satisfaction
shapiro.test(data$onlineSatisfaction)
shapiro.test(data$onlineVerbalSatisfaction)
shapiro.test(data$onlineNonverbalSatisfaction)
# paried t-test for experience
t.test(subset(previousExperience, meeting == "offline" & kind == "experience")$value
- subset(previousExperience, meeting =="online" & kind == "experience")$value)
### Previous Experience for On/Offline Meeting ###
# Data Preprocessing
previousExperience <- read.csv(file = "./data/questionnaire/revisedData/previousExperience.csv", header=T, fileEncoding="UTF-8-BOM")
# Change the Mean & Std to Numeric Value
pe_summary$meanVal = as.numeric(pe_summary$meanVal)
pe_summary$sdVal = as.numeric(pe_summary$sdVal)
pe_summary$seVal = as.numeric(pe_summary$seVal)
pe_summary$ciVal = as.numeric(pe_summary$ciVal)
# paried t-test for experience
t.test(subset(previousExperience, meeting == "offline" & kind == "experience")$value
- subset(previousExperience, meeting =="online" & kind == "experience")$value)
# paired t-test for participation
t.test(subset(previousExperience, meeting == "offline" & kind == "participation")$value
- subset(previousExperience, meeting =="online" & kind == "participation")$value)
### Online Experience - Overall Satisfaction ###
# Elicit dataframe form main data
onlineSatisfaction <- read.csv(file = "./data/questionnaire/revisedData/onlineSatisfaction.csv", header=T, fileEncoding="UTF-8-BOM")
# paired t-test
t.test(subset(onlineSatisfaction, satisfaction == "verbal")$value
- subset(onlineSatisfaction, satisfaction =="nonVerbal")$value)
