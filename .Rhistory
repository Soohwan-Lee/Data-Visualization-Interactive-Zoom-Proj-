library(ggpattern)
library(ggplot2)
library(plyr)
library(dplyr)
### Set File Path for Window Environment
setwd('C:/Users/LeeSooHwan/Desktop/github/DataVisualization-ZoomProj')
### Read Raw Data
questionnaireControl <- read.csv(file = "./data/userEvaluation/revisedData/questionnaireControl.csv", header=T, fileEncoding="UTF-8-BOM")
questionnaireExperimental <- read.csv(file = "./data/userEvaluation/revisedData/questionnaireExperimental.csv", header=T, fileEncoding="UTF-8-BOM")
questionnaireMerge <- read.csv(file = "./data/userEvaluation/revisedData/questionnaireMerge.csv", header=T, fileEncoding="UTF-8-BOM")
experimentalMeetingExperience <- read.csv(file = "./data/userEvaluation/revisedData/experimentalMeetingExperience.csv", header=T, fileEncoding="UTF-8-BOM")
experimentalSystemEvaluation <- read.csv(file = "./data/userEvaluation/revisedData/experimentalSystemEvaluation.csv", header=T, fileEncoding="UTF-8-BOM")
### Start Y axis from n
require(scales)
my_trans <- function(from=0)
{
trans <- function(x) x-from
inv <- function(x) x+from
trans_new("myscale", trans, inv,
domain = c(from, Inf))
}
### Set factor for questionnaireControl & questionnaireExperimental
questionnaireControl$measure <- as.factor(questionnaireControl$measure)
questionnaireExperimental$measure <- as.factor(questionnaireExperimental$measure)
questionnaireMerge$measure <- as.factor(questionnaireMerge$measure)
experimentalMeetingExperience$measure <- as.factor(experimentalMeetingExperience$measure)
experimentalSystemEvaluation$measure <- as.factor(experimentalSystemEvaluation$measure)
questionnaireControl$order <- as.factor(questionnaireControl$order)
questionnaireExperimental$order <- as.factor(questionnaireExperimental$order)
questionnaireMerge$order <- as.factor(questionnaireMerge$order)
experimentalMeetingExperience$order <- as.factor(experimentalMeetingExperience$order)
experimentalSystemEvaluation$order <- as.factor(experimentalSystemEvaluation$order)
### Set variables for questionnaireControl
controlSO = subset(questionnaireControl$value, questionnaireControl$measure == 'SO')
controlSP1 = subset(questionnaireControl$value, questionnaireControl$measure == 'SP1')
controlSP2 = subset(questionnaireControl$value, questionnaireControl$measure == 'SP2')
controlPNGA = subset(questionnaireControl$value, questionnaireControl$measure == 'PNGA')
controlprogress1 = subset(questionnaireControl$value, questionnaireControl$measure == 'progress1')
controlprogress2 = subset(questionnaireControl$value, questionnaireControl$measure == 'progress2')
controlparticipation = subset(questionnaireControl$value, questionnaireControl$measure == 'participation')
controlfeedback1 = subset(questionnaireControl$value, questionnaireControl$measure == 'feedback1')
controlfeedback2 = subset(questionnaireControl$value, questionnaireControl$measure == 'feedback2')
controlsocialPresence = subset(questionnaireControl$value, questionnaireControl$measure == 'socialPresence')
### Set variables for questionnaireControl_First Group
controlSOFirst = subset(questionnaireControl$value, questionnaireControl$measure == 'SO' & questionnaireControl$order == 'first')
controlSP1First = subset(questionnaireControl$value, questionnaireControl$measure == 'SP1' & questionnaireControl$order == 'first')
controlSP2First = subset(questionnaireControl$value, questionnaireControl$measure == 'SP2' & questionnaireControl$order == 'first')
controlPNGAFirst = subset(questionnaireControl$value, questionnaireControl$measure == 'PNGA' & questionnaireControl$order == 'first')
controlprogress1First = subset(questionnaireControl$value, questionnaireControl$measure == 'progress1' & questionnaireControl$order == 'first')
controlprogress2First = subset(questionnaireControl$value, questionnaireControl$measure == 'progress2' & questionnaireControl$order == 'first')
controlparticipationFirst = subset(questionnaireControl$value, questionnaireControl$measure == 'participation' & questionnaireControl$order == 'first')
controlfeedback1First = subset(questionnaireControl$value, questionnaireControl$measure == 'feedback1' & questionnaireControl$order == 'first')
controlfeedback2First = subset(questionnaireControl$value, questionnaireControl$measure == 'feedback2' & questionnaireControl$order == 'first')
controlsocialPresenceFirst = subset(questionnaireControl$value, questionnaireControl$measure == 'socialPresence' & questionnaireControl$order == 'first')
### Set variables for questionnaireControl_Second Group
controlSOSecond = subset(questionnaireControl$value, questionnaireControl$measure == 'SO' & questionnaireControl$order == 'second')
controlSP1Second = subset(questionnaireControl$value, questionnaireControl$measure == 'SP1' & questionnaireControl$order == 'second')
controlSP2Second = subset(questionnaireControl$value, questionnaireControl$measure == 'SP2' & questionnaireControl$order == 'second')
controlPNGASecond = subset(questionnaireControl$value, questionnaireControl$measure == 'PNGA' & questionnaireControl$order == 'second')
controlprogress1Second = subset(questionnaireControl$value, questionnaireControl$measure == 'progress1' & questionnaireControl$order == 'second')
controlprogress2Second = subset(questionnaireControl$value, questionnaireControl$measure == 'progress2' & questionnaireControl$order == 'second')
controlparticipationSecond = subset(questionnaireControl$value, questionnaireControl$measure == 'participation' & questionnaireControl$order == 'second')
controlfeedback1Second = subset(questionnaireControl$value, questionnaireControl$measure == 'feedback1' & questionnaireControl$order == 'second')
controlfeedback2Second = subset(questionnaireControl$value, questionnaireControl$measure == 'feedback2' & questionnaireControl$order == 'second')
controlsocialPresenceSecond = subset(questionnaireControl$value, questionnaireControl$measure == 'socialPresence' & questionnaireControl$order == 'second')
### Set variables for questionnaireExperimental
experimentalSO = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'SO')
experimentalSP1 = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'SP1')
experimentalSP2 = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'SP2')
experimentalPNGA = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'PNGA')
experimentalprogress1 = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'progress1')
experimentalprogress2 = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'progress2')
experimentalparticipation = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'participation')
experimentalfeedback1 = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'feedback1')
experimentalfeedback2 = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'feedback2')
experimentalsocialPresence = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'socialPresence')
experimentalsystemNovelty = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'systemNovelty')
experimentalbodyNovelty = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'bodyNovelty')
experimentalfaceNovelty = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'faceNovelty')
experimentalimmediacy = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'immediacy')
experimentalaccuracy = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'accuracy')
experimentallearnability = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'learnability')
experimentalfrustration = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'frustration')
### Set variables for questionnaireExperimental_First Group
experimentalSOFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'SO' & questionnaireExperimental$order == 'first')
experimentalSP1First = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'SP1' & questionnaireExperimental$order == 'first')
experimentalSP2First = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'SP2' & questionnaireExperimental$order == 'first')
experimentalPNGAFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'PNGA' & questionnaireExperimental$order == 'first')
experimentalprogress1First = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'progress1' & questionnaireExperimental$order == 'first')
experimentalprogress2First = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'progress2' & questionnaireExperimental$order == 'first')
experimentalparticipationFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'participation' & questionnaireExperimental$order == 'first')
experimentalfeedback1First = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'feedback1' & questionnaireExperimental$order == 'first')
experimentalfeedback2First = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'feedback2' & questionnaireExperimental$order == 'first')
experimentalsocialPresenceFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'socialPresence' & questionnaireExperimental$order == 'first')
experimentalsystemNoveltyFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'systemNovelty' & questionnaireExperimental$order == 'first')
experimentalbodyNoveltyFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'bodyNovelty' & questionnaireExperimental$order == 'first')
experimentalfaceNoveltyFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'faceNovelty' & questionnaireExperimental$order == 'first')
experimentalimmediacyFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'immediacy' & questionnaireExperimental$order == 'first')
experimentalaccuracyFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'accuracy' & questionnaireExperimental$order == 'first')
experimentallearnabilityFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'learnability' & questionnaireExperimental$order == 'first')
experimentalfrustrationFirst = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'frustration' & questionnaireExperimental$order == 'first')
### Set variables for questionnaireExperimental_Second Group
experimentalSOSecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'SO' & questionnaireExperimental$order == 'second')
experimentalSP1Second = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'SP1' & questionnaireExperimental$order == 'second')
experimentalSP2Second = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'SP2' & questionnaireExperimental$order == 'second')
experimentalPNGASecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'PNGA' & questionnaireExperimental$order == 'second')
experimentalprogress1Second = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'progress1' & questionnaireExperimental$order == 'second')
experimentalprogress2Second = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'progress2' & questionnaireExperimental$order == 'second')
experimentalparticipationSecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'participation' & questionnaireExperimental$order == 'second')
experimentalfeedback1Second = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'feedback1' & questionnaireExperimental$order == 'second')
experimentalfeedback2Second = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'feedback2' & questionnaireExperimental$order == 'second')
experimentalsocialPresenceSecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'socialPresence' & questionnaireExperimental$order == 'second')
experimentalsystemNoveltySecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'systemNovelty' & questionnaireExperimental$order == 'second')
experimentalbodyNoveltySecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'bodyNovelty' & questionnaireExperimental$order == 'second')
experimentalfaceNoveltySecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'faceNovelty' & questionnaireExperimental$order == 'second')
experimentalimmediacySecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'immediacy' & questionnaireExperimental$order == 'second')
experimentalaccuracySecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'accuracy' & questionnaireExperimental$order == 'second')
experimentallearnabilitySecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'learnability' & questionnaireExperimental$order == 'second')
experimentalfrustrationSecond = subset(questionnaireExperimental$value, questionnaireExperimental$measure == 'frustration' & questionnaireExperimental$order == 'second')
### Normality Test for questionnaireControl
shapiro.test(controlSO)
shapiro.test(controlSP1)
### Wilcoxon rank sum test betwen first and second group of experimental group
wilcox.test(experimentalSOFirst, experimentalSOSecond)
wilcox.test(experimentalSP1First, experimentalSP1Second)
wilcox.test(experimentalSP2First, experimentalSP2Second)
wilcox.test(experimentalPNGAFirst, experimentalPNGASecond)
wilcox.test(experimentalprogress1First, experimentalprogress1Second)
wilcox.test(experimentalprogress2First, experimentalprogress2Second)
wilcox.test(experimentalparticipationFirst, experimentalparticipationSecond)
wilcox.test(experimentalfeedback1First, experimentalfeedback1Second)
wilcox.test(experimentalfeedback2First, experimentalfeedback2Second)
wilcox.test(experimentalfeedback2First, experimentalfeedback2Second)
wilcox.test(experimentalsocialPresenceFirst, experimentalsocialPresenceSecond)
wilcox.test(experimentalsystemNoveltyFirst, experimentalsystemNoveltySecond)
wilcox.test(experimentalfaceNoveltyFirst, experimentalfaceNoveltySecond)
wilcox.test(experimentalbodyNoveltyFirst, experimentalbodyNoveltySecond)
wilcox.test(experimentalimmediacyFirst, experimentalimmediacySecond)
wilcox.test(experimentalaccuracyFirst, experimentalaccuracySecond)
wilcox.test(experimentallearnabilityFirst, experimentallearnabilitySecond)
wilcox.test(experimentalfrustrationFirst, experimentalfrustrationSecond)
### Box plot of control group & experimental group (SO~socialPresence)
# Define each variables
questionnaireMerge$value <- as.numeric(questionnaireMerge$value)
wilcox.test(experimentalimmediacyFirst, experimentalimmediacySecond)
wilcox.test(experimentalaccuracyFirst, experimentalaccuracySecond)
wilcox.test(experimentallearnabilityFirst, experimentallearnabilitySecond)
wilcox.test(experimentalfrustrationFirst, experimentalfrustrationSecond)
